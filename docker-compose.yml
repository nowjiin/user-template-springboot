services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: usertemplate-postgres
    environment:
      POSTGRES_DB: usertemplate_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - usertemplate-network
    restart: unless-stopped

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: usertemplate-app
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DATABASE_URL: jdbc:postgresql://postgres:5432/usertemplate_dev
      JWT_SECRET: myVerySecretKeyForJwtTokenGenerationAndValidationInProduction
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    networks:
      - usertemplate-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:

networks:
  usertemplate-network:
    driver: bridge
